trigger:
- master

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: SonarCloudPrepare@1
      inputs:
        SonarCloud: 'sonar-cloud'
        organization: 'jonatancon1'
        scannerMode: 'Other'
    - task: Gradle@3
      inputs:
        gradleWrapperFile: 'gradlew'
        tasks: 'build applicationCodeCoverageReport sonarqube'
        publishJUnitResults: true
        codeCoverageToolOption: 'None'
        codeCoverageClassFilesDirectories: 'build/classes/main/'
        javaHomeOption: 'JDKVersion'
        testResultsFiles: '**/TEST-*.xml'
        sonarQubeRunAnalysis: true
        sqGradlePluginVersionChoice: 'build'
        spotBugsAnalysis: false
    - task: Docker@2
      inputs:
        repository: 'java-app'
        command: 'build'
        Dockerfile: '**/Dockerfile'
    - task: ECRPushImage@1
      inputs:
        awsCredentials: 'container-resgister'
        regionName: 'us-east-1'
        imageSource: 'imageid'
        sourceImageId: 'java-app:$(Build.BuildId)'
        repositoryName: 'application-app'
        pushTag: '$(Build.BuildId)'
        forceDockerNamingConventions: true
        logRequest: true
        logResponse: true
    
    
    
